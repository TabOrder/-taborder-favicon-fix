{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Box,Paper,Typography,TextField,Button,IconButton,List,ListItem,ListItemText,ListItemIcon,Dialog,DialogTitle,DialogContent,DialogActions,Chip,Avatar,CircularProgress,Accordion,AccordionSummary,AccordionDetails,Card,CardContent,CardHeader,Badge,Tooltip,Fade,Zoom}from'@mui/material';import{WhatsApp as WhatsAppIcon,Send as SendIcon,Close as CloseIcon,ExpandMore as ExpandMoreIcon,Help as HelpIcon,School as SchoolIcon}from'@mui/icons-material';// Interfaces\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const WhatsAppChatbot=_ref=>{let{vendorData,onClose,isOpen=false}=_ref;// State management\nconst[messages,setMessages]=useState([]);const[inputText,setInputText]=useState('');const[isTyping,setIsTyping]=useState(false);const[showFAQ,setShowFAQ]=useState(false);const[showOnboarding,setShowOnboarding]=useState(false);const[chatOpen,setChatOpen]=useState(false);const messagesEndRef=useRef(null);// FAQ Database\nconst faqDatabase=[{id:'1',question:'How do I add new products to my inventory?',answer:'Go to Inventory â†’ Add New Item. Fill in product details including name, category, price, and quantity. Click \"Add Stock Item\" to save.',category:'inventory',keywords:['add','product','inventory','new','item']},{id:'2',question:'How do I update order status?',answer:'Go to Orders â†’ Find the order â†’ Click \"View Details\" â†’ Use the status buttons (Mark as Packed, Mark as Fulfilled) to update.',category:'orders',keywords:['order','status','update','packed','fulfilled']},{id:'3',question:'How do I set up WhatsApp notifications?',answer:'Go to Settings â†’ Notification Preferences â†’ Toggle \"WhatsApp Notifications\" to ON. Make sure your phone number is correct.',category:'general',keywords:['whatsapp','notification','setup','phone']},{id:'4',question:'How do I calculate my profit margins?',answer:'The system automatically calculates margins: (Retail Price - Wholesale Price) / Retail Price Ã— 100. View in Inventory table under \"Margin %\".',category:'inventory',keywords:['profit','margin','calculate','wholesale','retail']},{id:'5',question:'How do I sync with USSD menu?',answer:'Your products automatically sync with USSD when you add/update them. Changes appear in USSD within 2-3 minutes.',category:'general',keywords:['sync','ussd','menu','automatic']},{id:'6',question:'How do I handle customer complaints?',answer:'1. Listen to the customer\\n2. Apologize if needed\\n3. Offer solutions (refund, replacement, discount)\\n4. Update order status accordingly\\n5. Document the issue',category:'orders',keywords:['complaint','customer','refund','replacement']},{id:'7',question:'How do I set up bank details for payments?',answer:'Go to Settings â†’ Business Information â†’ Enter your bank account details in the \"Bank Details\" field. This is used for payout processing.',category:'payments',keywords:['bank','details','payment','payout','account']},{id:'8',question:'How do I track my earnings?',answer:'View your earnings on the Dashboard. You can see daily earnings, total earnings, and detailed breakdowns in the Analytics section.',category:'payments',keywords:['earnings','track','money','income','revenue']}];// Onboarding Steps\nconst onboardingSteps=[{id:'1',title:'Welcome to TabOrder! ðŸŽ‰',description:'Let\\'s get your business set up in 5 minutes. I\\'ll guide you through everything you need to know.',completed:false},{id:'2',title:'Add Your First Products ðŸ“¦',description:'Start by adding 5-10 essential products. Focus on your best-selling items first.',completed:false,action:'Go to Inventory'},{id:'3',title:'Set Up Notifications ðŸ””',description:'Enable WhatsApp notifications to get instant alerts for new orders.',completed:false,action:'Go to Settings'},{id:'4',title:'Test USSD Sync ðŸ“±',description:'Verify your products appear in the USSD menu for customers.',completed:false,action:'Test USSD'},{id:'5',title:'You\\'re Ready! ðŸš€',description:'Your TabOrder business is now live! Start receiving orders and growing your business.',completed:false}];// Auto-scroll to bottom\nconst scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages.length]);// Initialize chat with welcome message\nuseEffect(()=>{if(chatOpen&&messages.length===0){const welcomeMessage={id:'welcome',text:\"Hello \".concat((vendorData===null||vendorData===void 0?void 0:vendorData.name)||'Vendor',\"! \\uD83D\\uDC4B\\n\\nI'm your TabOrder assistant. How can I help you today?\"),sender:'bot',timestamp:new Date(),type:'text',quickReplies:['Help with Orders','Inventory Questions','Payment Issues','Onboarding Guide','FAQ']};setMessages([welcomeMessage]);}},[chatOpen,vendorData===null||vendorData===void 0?void 0:vendorData.name]);// Simulate typing indicator\nconst simulateTyping=async callback=>{setIsTyping(true);await new Promise(resolve=>setTimeout(resolve,1000+Math.random()*2000));setIsTyping(false);callback();};// Process user input and generate bot response\nconst processUserInput=async input=>{const userMessage={id:Date.now().toString(),text:input,sender:'user',timestamp:new Date(),type:'text'};setMessages(prev=>[...prev,userMessage]);// Find relevant FAQ\nconst relevantFAQ=faqDatabase.find(faq=>faq.keywords.some(keyword=>input.toLowerCase().includes(keyword.toLowerCase())));await simulateTyping(()=>{let botResponse;if(input.toLowerCase().includes('faq')||input.toLowerCase().includes('help')){botResponse={id:(Date.now()+1).toString(),text:'Here are some frequently asked questions:',sender:'bot',timestamp:new Date(),type:'faq',faqData:relevantFAQ};}else if(input.toLowerCase().includes('onboarding')||input.toLowerCase().includes('setup')){botResponse={id:(Date.now()+1).toString(),text:'Let me guide you through the onboarding process:',sender:'bot',timestamp:new Date(),type:'onboarding'};}else if(relevantFAQ){botResponse={id:(Date.now()+1).toString(),text:\"**\".concat(relevantFAQ.question,\"**\\n\\n\").concat(relevantFAQ.answer),sender:'bot',timestamp:new Date(),type:'text',quickReplies:['More Help','Onboarding Guide','Contact Support']};}else{botResponse={id:(Date.now()+1).toString(),text:'I understand you\\'re asking about \"'+input+'\". Let me help you find the right information. What specific area do you need help with?',sender:'bot',timestamp:new Date(),type:'text',quickReplies:['Orders','Inventory','Payments','Settings','FAQ']};}setMessages(prev=>[...prev,botResponse]);});};// Handle quick reply clicks\nconst handleQuickReply=reply=>{setInputText(reply);processUserInput(reply);};// Handle send message\nconst handleSendMessage=()=>{if(inputText.trim()){processUserInput(inputText.trim());setInputText('');}};// Handle Enter key\nconst handleKeyPress=event=>{if(event.key==='Enter'&&!event.shiftKey){event.preventDefault();handleSendMessage();}};// Render quick replies\nconst renderQuickReplies=replies=>/*#__PURE__*/_jsx(Box,{sx:{mt:1,display:'flex',flexWrap:'wrap',gap:1},children:replies.map((reply,index)=>/*#__PURE__*/_jsx(Chip,{label:reply,size:\"small\",variant:\"outlined\",onClick:()=>handleQuickReply(reply),sx:{cursor:'pointer','&:hover':{backgroundColor:'primary.light',color:'white'}}},index))});// Render FAQ section\nconst renderFAQSection=()=>/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"\\uD83D\\uDCDA Frequently Asked Questions\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(List,{children:faqDatabase.map(faq=>/*#__PURE__*/_jsxs(ListItem,{divider:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(HelpIcon,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:faq.question,secondary:faq.answer,primaryTypographyProps:{fontWeight:'bold'}})]},faq.id))})})]});// Render onboarding guide\nconst renderOnboardingGuide=()=>/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"\\uD83D\\uDE80 Onboarding Guide\"}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(List,{children:onboardingSteps.map((step,index)=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:step.completed?'success.main':'grey.300'},children:step.completed?'âœ“':index+1})}),/*#__PURE__*/_jsx(ListItemText,{primary:step.title,secondary:step.description}),step.action&&/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",children:step.action})]},step.id))})})]});// Main chat interface\nconst renderChatInterface=()=>/*#__PURE__*/_jsxs(Box,{sx:{height:'100%',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,borderBottom:1,borderColor:'divider',bgcolor:'success.main',color:'white'},children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(WhatsAppIcon,{sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"TabOrder Support\"})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:()=>setShowFAQ(!showFAQ),children:/*#__PURE__*/_jsx(HelpIcon,{})}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:()=>setShowOnboarding(!showOnboarding),children:/*#__PURE__*/_jsx(SchoolIcon,{})}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:()=>setChatOpen(false),children:/*#__PURE__*/_jsx(CloseIcon,{})})]})]})}),/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1,overflow:'auto',p:2,bgcolor:'#f5f5f5'},children:[messages.map(message=>/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:message.sender==='user'?'flex-end':'flex-start',mb:2},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2,maxWidth:'70%',bgcolor:message.sender==='user'?'primary.main':'white',color:message.sender==='user'?'white':'text.primary',borderRadius:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{whiteSpace:'pre-line'},children:message.text}),message.quickReplies&&renderQuickReplies(message.quickReplies),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{opacity:0.7,display:'block',mt:1},children:message.timestamp.toLocaleTimeString()})]})},message.id)),isTyping&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-start',mb:2},children:/*#__PURE__*/_jsx(Paper,{sx:{p:2,bgcolor:'white',borderRadius:2},children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(CircularProgress,{size:16,sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Typing...\"})]})})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(Box,{sx:{p:2,borderTop:1,borderColor:'divider',bgcolor:'white'},children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Type your message...\",value:inputText,onChange:e=>setInputText(e.target.value),onKeyPress:handleKeyPress,multiline:true,maxRows:3,sx:{mr:1}}),/*#__PURE__*/_jsx(IconButton,{color:\"primary\",onClick:handleSendMessage,disabled:!inputText.trim(),children:/*#__PURE__*/_jsx(SendIcon,{})})]})})]});// Floating chat button\nconst renderFloatingButton=()=>/*#__PURE__*/_jsx(Fade,{in:!chatOpen,children:/*#__PURE__*/_jsx(Zoom,{in:!chatOpen,children:/*#__PURE__*/_jsx(Box,{sx:{position:'fixed',bottom:20,right:20,zIndex:1000},children:/*#__PURE__*/_jsx(Tooltip,{title:\"Chat with TabOrder Support\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setChatOpen(true),sx:{bgcolor:'success.main',color:'white',width:60,height:60,'&:hover':{bgcolor:'success.dark'},boxShadow:3},children:/*#__PURE__*/_jsx(Badge,{badgeContent:1,color:\"error\",children:/*#__PURE__*/_jsx(WhatsAppIcon,{})})})})})})});// Main component render\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[renderFloatingButton(),chatOpen&&/*#__PURE__*/_jsx(Dialog,{open:chatOpen,onClose:()=>setChatOpen(false),maxWidth:\"sm\",fullWidth:true,PaperProps:{sx:{height:'80vh',maxHeight:'600px'}},children:renderChatInterface()}),/*#__PURE__*/_jsxs(Dialog,{open:showFAQ,onClose:()=>setShowFAQ(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"\\uD83D\\uDCDA FAQ & Help Center\"}),/*#__PURE__*/_jsx(DialogContent,{children:renderFAQSection()}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:()=>setShowFAQ(false),children:\"Close\"})})]}),/*#__PURE__*/_jsxs(Dialog,{open:showOnboarding,onClose:()=>setShowOnboarding(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"\\uD83D\\uDE80 Onboarding Guide\"}),/*#__PURE__*/_jsx(DialogContent,{children:renderOnboardingGuide()}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:()=>setShowOnboarding(false),children:\"Close\"})})]})]});};export default WhatsAppChatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Paper","Typography","TextField","Button","IconButton","List","ListItem","ListItemText","ListItemIcon","Dialog","DialogTitle","DialogContent","DialogActions","Chip","Avatar","CircularProgress","Accordion","AccordionSummary","AccordionDetails","Card","CardContent","CardHeader","Badge","Tooltip","Fade","Zoom","WhatsApp","WhatsAppIcon","Send","SendIcon","Close","CloseIcon","ExpandMore","ExpandMoreIcon","Help","HelpIcon","School","SchoolIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WhatsAppChatbot","_ref","vendorData","onClose","isOpen","messages","setMessages","inputText","setInputText","isTyping","setIsTyping","showFAQ","setShowFAQ","showOnboarding","setShowOnboarding","chatOpen","setChatOpen","messagesEndRef","faqDatabase","id","question","answer","category","keywords","onboardingSteps","title","description","completed","action","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","length","welcomeMessage","text","concat","name","sender","timestamp","Date","type","quickReplies","simulateTyping","callback","Promise","resolve","setTimeout","Math","random","processUserInput","input","userMessage","now","toString","prev","relevantFAQ","find","faq","some","keyword","toLowerCase","includes","botResponse","faqData","handleQuickReply","reply","handleSendMessage","trim","handleKeyPress","event","key","shiftKey","preventDefault","renderQuickReplies","replies","sx","mt","display","flexWrap","gap","children","map","index","label","size","variant","onClick","cursor","backgroundColor","color","renderFAQSection","expandIcon","divider","primary","secondary","primaryTypographyProps","fontWeight","renderOnboardingGuide","step","bgcolor","renderChatInterface","height","flexDirection","p","borderBottom","borderColor","alignItems","justifyContent","mr","flexGrow","overflow","message","mb","maxWidth","borderRadius","whiteSpace","opacity","toLocaleTimeString","ref","borderTop","fullWidth","placeholder","value","onChange","e","target","onKeyPress","multiline","maxRows","disabled","renderFloatingButton","in","position","bottom","right","zIndex","width","boxShadow","badgeContent","open","PaperProps","maxHeight"],"sources":["C:/Users/User/Downloads/Merchants/taborder-frontend/render-deployment/frontend/src/components/WhatsAppChatbot.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Chip,\r\n  Avatar,\r\n  CircularProgress,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Badge,\r\n  Tooltip,\r\n  Fade,\r\n  Zoom,\r\n} from '@mui/material';\r\nimport {\r\n  WhatsApp as WhatsAppIcon,\r\n  Send as SendIcon,\r\n  Close as CloseIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Help as HelpIcon,\r\n  School as SchoolIcon,\r\n} from '@mui/icons-material';\r\n\r\n// Interfaces\r\ninterface ChatMessage {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  type: 'text' | 'quick_reply' | 'faq' | 'onboarding';\r\n  quickReplies?: string[];\r\n  faqData?: FAQItem;\r\n}\r\n\r\ninterface FAQItem {\r\n  id: string;\r\n  question: string;\r\n  answer: string;\r\n  category: 'general' | 'orders' | 'payments' | 'inventory' | 'onboarding';\r\n  keywords: string[];\r\n}\r\n\r\ninterface OnboardingStep {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  completed: boolean;\r\n  action?: string;\r\n}\r\n\r\ninterface WhatsAppChatbotProps {\r\n  vendorData?: {\r\n    name: string;\r\n    email: string;\r\n    phone: string;\r\n    business_name: string;\r\n  };\r\n  onClose?: () => void;\r\n  isOpen?: boolean;\r\n}\r\n\r\nconst WhatsAppChatbot: React.FC<WhatsAppChatbotProps> = ({\r\n  vendorData,\r\n  onClose,\r\n  isOpen = false,\r\n}) => {\r\n  // State management\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [showFAQ, setShowFAQ] = useState(false);\r\n  const [showOnboarding, setShowOnboarding] = useState(false);\r\n  const [chatOpen, setChatOpen] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // FAQ Database\r\n  const faqDatabase: FAQItem[] = [\r\n    {\r\n      id: '1',\r\n      question: 'How do I add new products to my inventory?',\r\n      answer: 'Go to Inventory â†’ Add New Item. Fill in product details including name, category, price, and quantity. Click \"Add Stock Item\" to save.',\r\n      category: 'inventory',\r\n      keywords: ['add', 'product', 'inventory', 'new', 'item'],\r\n    },\r\n    {\r\n      id: '2',\r\n      question: 'How do I update order status?',\r\n      answer: 'Go to Orders â†’ Find the order â†’ Click \"View Details\" â†’ Use the status buttons (Mark as Packed, Mark as Fulfilled) to update.',\r\n      category: 'orders',\r\n      keywords: ['order', 'status', 'update', 'packed', 'fulfilled'],\r\n    },\r\n    {\r\n      id: '3',\r\n      question: 'How do I set up WhatsApp notifications?',\r\n      answer: 'Go to Settings â†’ Notification Preferences â†’ Toggle \"WhatsApp Notifications\" to ON. Make sure your phone number is correct.',\r\n      category: 'general',\r\n      keywords: ['whatsapp', 'notification', 'setup', 'phone'],\r\n    },\r\n    {\r\n      id: '4',\r\n      question: 'How do I calculate my profit margins?',\r\n      answer: 'The system automatically calculates margins: (Retail Price - Wholesale Price) / Retail Price Ã— 100. View in Inventory table under \"Margin %\".',\r\n      category: 'inventory',\r\n      keywords: ['profit', 'margin', 'calculate', 'wholesale', 'retail'],\r\n    },\r\n    {\r\n      id: '5',\r\n      question: 'How do I sync with USSD menu?',\r\n      answer: 'Your products automatically sync with USSD when you add/update them. Changes appear in USSD within 2-3 minutes.',\r\n      category: 'general',\r\n      keywords: ['sync', 'ussd', 'menu', 'automatic'],\r\n    },\r\n    {\r\n      id: '6',\r\n      question: 'How do I handle customer complaints?',\r\n      answer: '1. Listen to the customer\\n2. Apologize if needed\\n3. Offer solutions (refund, replacement, discount)\\n4. Update order status accordingly\\n5. Document the issue',\r\n      category: 'orders',\r\n      keywords: ['complaint', 'customer', 'refund', 'replacement'],\r\n    },\r\n    {\r\n      id: '7',\r\n      question: 'How do I set up bank details for payments?',\r\n      answer: 'Go to Settings â†’ Business Information â†’ Enter your bank account details in the \"Bank Details\" field. This is used for payout processing.',\r\n      category: 'payments',\r\n      keywords: ['bank', 'details', 'payment', 'payout', 'account'],\r\n    },\r\n    {\r\n      id: '8',\r\n      question: 'How do I track my earnings?',\r\n      answer: 'View your earnings on the Dashboard. You can see daily earnings, total earnings, and detailed breakdowns in the Analytics section.',\r\n      category: 'payments',\r\n      keywords: ['earnings', 'track', 'money', 'income', 'revenue'],\r\n    },\r\n  ];\r\n\r\n  // Onboarding Steps\r\n  const onboardingSteps: OnboardingStep[] = [\r\n    {\r\n      id: '1',\r\n      title: 'Welcome to TabOrder! ðŸŽ‰',\r\n      description: 'Let\\'s get your business set up in 5 minutes. I\\'ll guide you through everything you need to know.',\r\n      completed: false,\r\n    },\r\n    {\r\n      id: '2',\r\n      title: 'Add Your First Products ðŸ“¦',\r\n      description: 'Start by adding 5-10 essential products. Focus on your best-selling items first.',\r\n      completed: false,\r\n      action: 'Go to Inventory',\r\n    },\r\n    {\r\n      id: '3',\r\n      title: 'Set Up Notifications ðŸ””',\r\n      description: 'Enable WhatsApp notifications to get instant alerts for new orders.',\r\n      completed: false,\r\n      action: 'Go to Settings',\r\n    },\r\n    {\r\n      id: '4',\r\n      title: 'Test USSD Sync ðŸ“±',\r\n      description: 'Verify your products appear in the USSD menu for customers.',\r\n      completed: false,\r\n      action: 'Test USSD',\r\n    },\r\n    {\r\n      id: '5',\r\n      title: 'You\\'re Ready! ðŸš€',\r\n      description: 'Your TabOrder business is now live! Start receiving orders and growing your business.',\r\n      completed: false,\r\n    },\r\n  ];\r\n\r\n  // Auto-scroll to bottom\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages.length]);\r\n\r\n  // Initialize chat with welcome message\r\n  useEffect(() => {\r\n    if (chatOpen && messages.length === 0) {\r\n      const welcomeMessage: ChatMessage = {\r\n        id: 'welcome',\r\n        text: `Hello ${vendorData?.name || 'Vendor'}! ðŸ‘‹\\n\\nI'm your TabOrder assistant. How can I help you today?`,\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        type: 'text',\r\n        quickReplies: ['Help with Orders', 'Inventory Questions', 'Payment Issues', 'Onboarding Guide', 'FAQ'],\r\n      };\r\n      setMessages([welcomeMessage]);\r\n    }\r\n  }, [chatOpen, vendorData?.name]);\r\n\r\n  // Simulate typing indicator\r\n  const simulateTyping = async (callback: () => void) => {\r\n    setIsTyping(true);\r\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\r\n    setIsTyping(false);\r\n    callback();\r\n  };\r\n\r\n  // Process user input and generate bot response\r\n  const processUserInput = async (input: string) => {\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      text: input,\r\n      sender: 'user',\r\n      timestamp: new Date(),\r\n      type: 'text',\r\n    };\r\n    setMessages(prev => [...prev, userMessage]);\r\n\r\n    // Find relevant FAQ\r\n    const relevantFAQ = faqDatabase.find(faq =>\r\n      faq.keywords.some(keyword =>\r\n        input.toLowerCase().includes(keyword.toLowerCase())\r\n      )\r\n    );\r\n\r\n    await simulateTyping(() => {\r\n      let botResponse: ChatMessage;\r\n\r\n      if (input.toLowerCase().includes('faq') || input.toLowerCase().includes('help')) {\r\n        botResponse = {\r\n          id: (Date.now() + 1).toString(),\r\n          text: 'Here are some frequently asked questions:',\r\n          sender: 'bot',\r\n          timestamp: new Date(),\r\n          type: 'faq',\r\n          faqData: relevantFAQ,\r\n        };\r\n      } else if (input.toLowerCase().includes('onboarding') || input.toLowerCase().includes('setup')) {\r\n        botResponse = {\r\n          id: (Date.now() + 1).toString(),\r\n          text: 'Let me guide you through the onboarding process:',\r\n          sender: 'bot',\r\n          timestamp: new Date(),\r\n          type: 'onboarding',\r\n        };\r\n      } else if (relevantFAQ) {\r\n        botResponse = {\r\n          id: (Date.now() + 1).toString(),\r\n          text: `**${relevantFAQ.question}**\\n\\n${relevantFAQ.answer}`,\r\n          sender: 'bot',\r\n          timestamp: new Date(),\r\n          type: 'text',\r\n          quickReplies: ['More Help', 'Onboarding Guide', 'Contact Support'],\r\n        };\r\n      } else {\r\n        botResponse = {\r\n          id: (Date.now() + 1).toString(),\r\n          text: 'I understand you\\'re asking about \"' + input + '\". Let me help you find the right information. What specific area do you need help with?',\r\n          sender: 'bot',\r\n          timestamp: new Date(),\r\n          type: 'text',\r\n          quickReplies: ['Orders', 'Inventory', 'Payments', 'Settings', 'FAQ'],\r\n        };\r\n      }\r\n\r\n      setMessages(prev => [...prev, botResponse]);\r\n    });\r\n  };\r\n\r\n  // Handle quick reply clicks\r\n  const handleQuickReply = (reply: string) => {\r\n    setInputText(reply);\r\n    processUserInput(reply);\r\n  };\r\n\r\n  // Handle send message\r\n  const handleSendMessage = () => {\r\n    if (inputText.trim()) {\r\n      processUserInput(inputText.trim());\r\n      setInputText('');\r\n    }\r\n  };\r\n\r\n  // Handle Enter key\r\n  const handleKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // Render quick replies\r\n  const renderQuickReplies = (replies: string[]) => (\r\n    <Box sx={{ mt: 1, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n      {replies.map((reply, index) => (\r\n        <Chip\r\n          key={index}\r\n          label={reply}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          onClick={() => handleQuickReply(reply)}\r\n          sx={{ cursor: 'pointer', '&:hover': { backgroundColor: 'primary.light', color: 'white' } }}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n\r\n  // Render FAQ section\r\n  const renderFAQSection = () => (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography variant=\"h6\">ðŸ“š Frequently Asked Questions</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <List>\r\n          {faqDatabase.map((faq) => (\r\n            <ListItem key={faq.id} divider>\r\n              <ListItemIcon>\r\n                <HelpIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={faq.question}\r\n                secondary={faq.answer}\r\n                primaryTypographyProps={{ fontWeight: 'bold' }}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n\r\n  // Render onboarding guide\r\n  const renderOnboardingGuide = () => (\r\n    <Card>\r\n      <CardHeader title=\"ðŸš€ Onboarding Guide\" />\r\n      <CardContent>\r\n        <List>\r\n          {onboardingSteps.map((step, index) => (\r\n            <ListItem key={step.id}>\r\n              <ListItemIcon>\r\n                <Avatar sx={{ bgcolor: step.completed ? 'success.main' : 'grey.300' }}>\r\n                  {step.completed ? 'âœ“' : index + 1}\r\n                </Avatar>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={step.title}\r\n                secondary={step.description}\r\n              />\r\n              {step.action && (\r\n                <Button size=\"small\" variant=\"outlined\">\r\n                  {step.action}\r\n                </Button>\r\n              )}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  // Main chat interface\r\n  const renderChatInterface = () => (\r\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      {/* Chat Header */}\r\n      <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider', bgcolor: 'success.main', color: 'white' }}>\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <WhatsAppIcon sx={{ mr: 1 }} />\r\n            <Typography variant=\"h6\">TabOrder Support</Typography>\r\n          </Box>\r\n          <Box>\r\n            <IconButton color=\"inherit\" onClick={() => setShowFAQ(!showFAQ)}>\r\n              <HelpIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\" onClick={() => setShowOnboarding(!showOnboarding)}>\r\n              <SchoolIcon />\r\n            </IconButton>\r\n            <IconButton color=\"inherit\" onClick={() => setChatOpen(false)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Chat Messages */}\r\n      <Box sx={{ flexGrow: 1, overflow: 'auto', p: 2, bgcolor: '#f5f5f5' }}>\r\n        {messages.map((message) => (\r\n          <Box\r\n            key={message.id}\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start',\r\n              mb: 2,\r\n            }}\r\n          >\r\n            <Paper\r\n              sx={{\r\n                p: 2,\r\n                maxWidth: '70%',\r\n                bgcolor: message.sender === 'user' ? 'primary.main' : 'white',\r\n                color: message.sender === 'user' ? 'white' : 'text.primary',\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-line' }}>\r\n                {message.text}\r\n              </Typography>\r\n              {message.quickReplies && renderQuickReplies(message.quickReplies)}\r\n              <Typography variant=\"caption\" sx={{ opacity: 0.7, display: 'block', mt: 1 }}>\r\n                {message.timestamp.toLocaleTimeString()}\r\n              </Typography>\r\n            </Paper>\r\n          </Box>\r\n        ))}\r\n        \r\n        {isTyping && (\r\n          <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>\r\n            <Paper sx={{ p: 2, bgcolor: 'white', borderRadius: 2 }}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <CircularProgress size={16} sx={{ mr: 1 }} />\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Typing...\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Box>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </Box>\r\n\r\n      {/* Input Area */}\r\n      <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider', bgcolor: 'white' }}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Type your message...\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            multiline\r\n            maxRows={3}\r\n            sx={{ mr: 1 }}\r\n          />\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={handleSendMessage}\r\n            disabled={!inputText.trim()}\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  // Floating chat button\r\n  const renderFloatingButton = () => (\r\n    <Fade in={!chatOpen}>\r\n      <Zoom in={!chatOpen}>\r\n        <Box\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: 20,\r\n            right: 20,\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <Tooltip title=\"Chat with TabOrder Support\">\r\n            <IconButton\r\n              onClick={() => setChatOpen(true)}\r\n              sx={{\r\n                bgcolor: 'success.main',\r\n                color: 'white',\r\n                width: 60,\r\n                height: 60,\r\n                '&:hover': {\r\n                  bgcolor: 'success.dark',\r\n                },\r\n                boxShadow: 3,\r\n              }}\r\n            >\r\n              <Badge badgeContent={1} color=\"error\">\r\n                <WhatsAppIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Zoom>\r\n    </Fade>\r\n  );\r\n\r\n  // Main component render\r\n  return (\r\n    <>\r\n      {renderFloatingButton()}\r\n      \r\n      {chatOpen && (\r\n        <Dialog\r\n          open={chatOpen}\r\n          onClose={() => setChatOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n          PaperProps={{\r\n            sx: {\r\n              height: '80vh',\r\n              maxHeight: '600px',\r\n            },\r\n          }}\r\n        >\r\n          {renderChatInterface()}\r\n        </Dialog>\r\n      )}\r\n\r\n      {/* FAQ Dialog */}\r\n      <Dialog\r\n        open={showFAQ}\r\n        onClose={() => setShowFAQ(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>ðŸ“š FAQ & Help Center</DialogTitle>\r\n        <DialogContent>\r\n          {renderFAQSection()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowFAQ(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Onboarding Dialog */}\r\n      <Dialog\r\n        open={showOnboarding}\r\n        onClose={() => setShowOnboarding(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>ðŸš€ Onboarding Guide</DialogTitle>\r\n        <DialogContent>\r\n          {renderOnboardingGuide()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowOnboarding(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WhatsAppChatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}